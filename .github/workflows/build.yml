name: Build

# Only run the workflow when a new tag is found
on:
  push:
    tags:
      - "*"

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
      release_id: ${{ steps.step_release_id.outputs.release_id }}
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: release
      uses: softprops/action-gh-release@v1
      id: create_release
      with:
        draft: true
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - id: step_upload_url
      run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"
    - id: step_release_id
      run: echo "::set-output name=release_id::${{ steps.create_release.outputs.id }}"

  build_on_linux:
    needs: build_release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@master
      with:
        node-version: 18
    - name:           Install libusb
      run:            |
        sudo apt-get -y update
        sudo apt-get -y install libusb-1.0-0-dev libudev-dev
    - name:           Install Snapcraft
      uses:           samuelmeuli/action-snapcraft@v1
      # Only install Snapcraft on Ubuntu
    - name: install dependencies
      run: npm install
    - name: build
      env:
        GH_TOKEN: ${{ secrets.github_token }} # Automatically generated
      run: npm run dist-linux
    - name: Upload binaries to release
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/*.AppImage"
        delete_file: "*.blockmap"
        release_id: ${{ needs.build_release.outputs.release_id }}

  build_on_mac:
    needs: build_release
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@master
      with:
        node-version: 18
    - name: install dependencies
      run: npm install
    - name: build
      env:
        GH_TOKEN: ${{ secrets.github_token }} # Automatically generated
      run: npm run dist-mac
    - name: Upload binaries to release
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/*.dmg"
        delete_file: "*.blockmap"
        release_id: ${{ needs.build_release.outputs.release_id }}

  build_on_win:
    needs: build_release
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@master
      with:
        node-version: 18
    - name: install dependencies
      run: npm install
    - name: build
      env:
        GH_TOKEN: ${{ secrets.github_token }} # Automatically generated
      run: npm run dist-win
    - name: Upload binaries to release
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/*-Setup*.exe"
        delete_file: "*.blockmap"
        release_id: ${{ needs.build_release.outputs.release_id }}
